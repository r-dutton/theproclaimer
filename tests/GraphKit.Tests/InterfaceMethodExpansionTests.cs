using GraphKit.Graph;using GraphKit.Outputs;using Xunit;namespace GraphKit.Tests;public class InterfaceMethodExpansionTests{[Fact]public void Interface_Method_Expansion_Includes_Internal_Service_Usages(){var endpoint=new GraphNode{Id="ep",Type="endpoint.controller",Name="GetUser",Fqdn="Api.UserController.GetUser",Assembly="Api",Project="Api",FilePath="Controller.cs",SymbolId="T:Api.UserController.GetUser",Props=new System.Collections.Generic.Dictionary<string,object>{{"http_method","GET"},{"route","/user"},{"status_codes",new[]{200}}}};var userServiceInterface=new GraphNode{Id="ius",Type="app.service",Name="IUserService",Fqdn="App.Services.IUserService",Assembly="App",Project="App",FilePath="IUserService.cs",SymbolId="T:App.Services.IUserService"};var dependency=new GraphNode{Id="dep",Type="app.service",Name="DepService",Fqdn="App.Services.DepService",Assembly="App",Project="App",FilePath="DepService.cs",SymbolId="T:App.Services.DepService",Span=new GraphSpan{StartLine=30,EndLine=60}};var userServiceImpl=new GraphNode{Id="us",Type="app.service",Name="UserService",Fqdn="App.Services.UserService",Assembly="App",Project="App",FilePath="UserService.cs",SymbolId="T:App.Services.UserService",Span=new GraphSpan{StartLine=10,EndLine=120}};var implEdge=new GraphEdge{From=userServiceInterface.Id,To=userServiceImpl.Id,Kind="implemented_by",Source="static"};var endpointUsesUserService=new GraphEdge{From=endpoint.Id,To=userServiceInterface.Id,Kind="uses_service",Source="static",Props=new System.Collections.Generic.Dictionary<string,object>{{"method","GetUserId"}}};var usCallsDep=new GraphEdge{From=userServiceImpl.Id,To=dependency.Id,Kind="calls",Source="static",Props=new System.Collections.Generic.Dictionary<string,object>{{"method","Work"}}};var doc=new GraphDocument{Version="1.0",Nodes=new[]{endpoint,userServiceInterface,userServiceImpl,dependency},Edges=new[]{implEdge,endpointUsesUserService,usCallsDep}};var flow=FlowBuilder.BuildFlows(doc,n=>true);Assert.Contains("uses_service UserService",flow);Assert.DoesNotContain("uses_service IUserService",flow);Assert.Contains("implementation App.Services.UserService.GetUserId",flow);Assert.Contains("calls DepService.Work",flow);}}
